# IPアドレスリスト取得関数定義
GET_IPLIST(){
    # http://nami.jp/ipv4bycc/から最新版IPアドレスリストを取得する
    wget http://nami.jp/ipv4bycc/cidr.txt.gz
    gunzip cidr.txt.gz
    # 最新版IPアドレスリストが取得できなかった場合
    if [ ! -f cidr.txt ]; then
        if [ -f /tmp/cidr.txt ]; then
            # バックアップがある場合はその旨をroot宛にメール通知して処理を打ち切る
            echo cidr.txt was read from the backup! | mail -s $0 root
            exit 1
        else
            # バックアップがない場合はその旨をroot宛にメール通知して処理を打ち切る
            echo cidr.txt not found!|mail -s $0 root
            exit 1
        fi
    fi
    # 最新版IPアドレスリストを /tmpへバックアップする
    /bin/mv cidr.txt /tmp/cidr.txt
}

# ACCEPT_COUNTRY_MAKE関数定義
# 指定された国のアドレスからのアクセスを許可するユーザ定義チェイン作成
ACCEPT_COUNTRY_MAKE(){
    echo "start accept_country_make"
    MAX=`cat /tmp/cidr.txt|grep ^$1|awk '{print $2}'|wc -l`
    COUNT=0
    for addr in `cat /tmp/cidr.txt|grep ^$1|awk '{print $2}'`
    do
        COUNT=`expr $COUNT + 1`
       	echo "COUNT = $COUNT/$MAX" 
	iptables -A ACCEPT_COUNTRY -s $addr -j ACCEPT
    done
    echo "end accept_country_make"
}

# DROP_COUNTRY_MAKE関数定義
# 指定された国のアドレスからのアクセスを破棄するユーザ定義チェイン作成
DROP_COUNTRY_MAKE(){
    echo "start drop_country_make"
    MAX=`cat /tmp/cidr.txt|grep ^$1|awk '{print $2}'|wc -l`
    COUNT=0
    iptables -A DROP_COUNTRY -j LOG --log-prefix '[IPTABLES DENY_COUNTRY] : '
    for addr in `cat /tmp/cidr.txt|grep ^$1|awk '{print $2}'`
    do
        COUNT=`expr $COUNT + 1`
       	echo "COUNT = $COUNT/$MAX" 
        iptables -A DROP_COUNTRY -s $addr -j DROP
    done
    echo "end drop_country_make"
}

ACCEPT_SOURCE_MAKE(){
  echo "start accept_source_make : $1"
  MAX=`cat $2 | grep -v '^#' | grep . | wc -l`
  COUNT=0
  $IPTABLES -N ACCEPT_${1}
  for addr in `cat $2 | grep -v '^#' | grep .`
  do
    COUNT=`expr $COUNT + 1`
    echo "COUNT = $COUNT/$MAX"
    $IPTABLES -A ACCEPT_${1} -s $addr -j ACCEPT
  done 
  echo "end accept_source_make : $1"
}

DROP_SOURCE_MAKE(){
  echo "start drop_source_make : $1"
  MAX=`cat $2 | grep -v '^#' | grep . | wc -l`
  COUNT=0
  $IPTABLES -N DROP_${1}
  $IPTABLES -A DROP_${1} LOG --log-prefix "[IPTABLES DROP_${1}] : "
  for addr in `cat $2 | grep -v '^#' | grep .`
  do
    COUNT=`expr $COUNT + 1`
    echo "COUNT = $COUNT/$MAX"
    $IPTABLES -A DROP_${1} -s $addr -j DROP
  done 
  echo "end drop_source_make : $1"
}

